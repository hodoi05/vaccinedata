name: collect data

on:
  schedule:
    - cron: "07 2,5,6,12 * * *" 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run data collection
        run: |
          echo Retrieve data for total number of infections data from https://raw.githubusercontent.com/entorb/COVID-19-Coronavirus-German-Regions/master/data/de-states/de-state-DE-total.tsv,
          wget -O data/source/de-state-DE-total-infections.tsv https://raw.githubusercontent.com/entorb/COVID-19-Coronavirus-German-Regions/master/data/de-states/de-state-DE-total.tsv
          
          echo Retrieve vaccine info from https://raw.githubusercontent.com/ard-data/2020-rki-impf-archive/master/data/9_csv_v3/region_DE.csv
          wget -O data/source/all-vaccine-region_DE.csv https://raw.githubusercontent.com/ard-data/2020-rki-impf-archive/master/data/9_csv_v3/region_DE.csv

      - name: Python Setup
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Python Cached pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('py-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
            
      - name: Python Install requirements
        run: pip install -r py-requirements.txt

      - name: fetch-de-divi
        run: python3 fetch-de-divi.py
      
      # Gnuplot plotting
      - name: Gnuplot Install 
        run: |
          sudo apt-get update > /dev/null
          sudo apt-get install gnuplot > /dev/null
          
      - name: Gnuplot plotting
        run: |
          cd scripts-gnuplot
          gnuplot all.gp
          cd ..
    
      - name: data commit new files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/*
          git add plots-gnuplot/*
          git diff-index --quiet HEAD || git commit -m "auto update"  | grep -v rewrite
      - name: data push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          directory: data
          
          
